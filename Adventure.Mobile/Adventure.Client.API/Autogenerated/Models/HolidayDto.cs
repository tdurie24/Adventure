// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Adventure.Client.API.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class HolidayDto
    {
        /// <summary>
        /// Initializes a new instance of the HolidayDto class.
        /// </summary>
        public HolidayDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HolidayDto class.
        /// </summary>
        public HolidayDto(System.Guid? id = default(System.Guid?), string name = default(string), IList<ImageDto> images = default(IList<ImageDto>), PriceDto price = default(PriceDto), LocationDto location = default(LocationDto), HolidayTypeDto holidayType = default(HolidayTypeDto), string shortDescription = default(string), string longDescription = default(string), System.DateTime? dateFrom = default(System.DateTime?), System.DateTime? dateTo = default(System.DateTime?), System.DateTime? dateCreated = default(System.DateTime?), System.DateTime? dateUpdated = default(System.DateTime?), bool? isFeatured = default(bool?))
        {
            Id = id;
            Name = name;
            Images = images;
            Price = price;
            Location = location;
            HolidayType = holidayType;
            ShortDescription = shortDescription;
            LongDescription = longDescription;
            DateFrom = dateFrom;
            DateTo = dateTo;
            DateCreated = dateCreated;
            DateUpdated = dateUpdated;
            IsFeatured = isFeatured;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "images")]
        public IList<ImageDto> Images { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public PriceDto Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public LocationDto Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "holidayType")]
        public HolidayTypeDto HolidayType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shortDescription")]
        public string ShortDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "longDescription")]
        public string LongDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateFrom")]
        public System.DateTime? DateFrom { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateTo")]
        public System.DateTime? DateTo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateCreated")]
        public System.DateTime? DateCreated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateUpdated")]
        public System.DateTime? DateUpdated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFeatured")]
        public bool? IsFeatured { get; set; }

    }
}
